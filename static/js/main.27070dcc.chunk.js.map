{"version":3,"sources":["logo.svg","theme-vars.js","search/index-styled.js","shared-states/broker.js","shared-states/state.js","shared-states/index.js","search/index.js","tab/view-styled.js","tab/view.js","tab/data-process.js","tab/index.js","left-col/styled.js","left-col/filters.js","left-col/infos.js","left-col/index.js","App-styled.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","theme_vars","_margin","Math","floor","PARAMS","Input","styled","input","_templateObject","Broker","Object","classCallCheck","this","_listeners","fn","_this","push","i","indexOf","splice","_len","arguments","length","args","Array","_key","Promise","all","map","apply","State","initial","undefined","_broker","_state","_this$_broker","subscribe","val","publish","states","search","sorting","filters","name","phone_number","address","data","useSharedState","Error","_useState","useState","getValue","_useState2","slicedToArray","setter","useEffect","unsub","setSharedState","value","setValue","setSearchValue","evt","target","src_search","react_default","a","createElement","type","placeholder","onChange","Table","table","view_styled_templateObject","TheadRow","tr","_templateObject2","Th","_ref","field","onClick","e","replace","view","_ref2","view_Th","d","key","_index","main_default","searchWords","autoEscape","textToHighlight","split","s","initData","contacts","assign","_search_name","toLowerCase","_search_address","alert","dataSource","window","fetch","then","resp","json","catch","concat","message","req","XMLHttpRequest","onreadystatechange","event","readyState","DONE","status","JSON","parse","responseText","open","send","DataProcess","processed","filter","slice","sort","b","localeCompare","Section","div","styled_templateObject","Filter","span","styled_templateObject2","Infos","_templateObject3","FilterC","className","defineProperty","left_col_filters","filters_FilterC","infos","left_col","App","App_styled_templateObject","LeftCol","App_styled_templateObject2","Content","App_styled_templateObject3","Head","_templateObject4","rotate","keyframes","_templateObject5","Logo","img","_templateObject6","AppName","h1","_templateObject7","Boolean","location","hostname","match","ReactDOM","render","src","logo","alt","tab","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27070dcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default {\n  headSize: 64,\n  contentSize: 46,\n  appNameSize: 25,\n  gutters: 20,\n}","import styled from '@emotion/styled'\nimport PARAMS from '../theme-vars'\n\nconst smaller = 10\nconst _margin = Math.floor((PARAMS.headSize-PARAMS.contentSize+smaller)/2) \n\nexport const Input = styled.input`\n  margin-top: ${_margin}px;\n  height: ${PARAMS.contentSize-smaller}px;\n  line-height: ${PARAMS.contentSize-smaller}px;\n  font-size: 14px;\n  box-sizing: border-box;\n  padding: 0 10px;\n  background: rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0,0,0,0);\n  &:focus {\n    background: white;\n    color: rgba(0,0,0,0.87);\n    border: 1px solid #578ec6;\n  }\n`","export default class Broker {\n  constructor() {\n    this._listeners = []\n  }\n  \n  subscribe(fn) {\n    this._listeners.push(fn)\n    return () => {\n      let i = this._listeners.indexOf(fn)\n      if (i>-1) this._listeners.splice(i, 1)\n    }\n  }\n  \n  publish(...args) {\n    return Promise.all(this._listeners.map(fn => fn(...args)))\n  }\n}","import Broker from './broker'\n\nclass State {\n  constructor(initial = null) {\n    this._broker = new Broker()\n    this._state = initial\n  }\n  \n  subscribe(...args) {\n    return this._broker.subscribe(...args)\n  }\n  \n  setValue(val) {\n    this._state = val\n    return this._broker.publish(this._state)\n  }\n  \n  getValue() {\n    return this._state\n  }\n}\n\nexport default State","import { useState, useEffect } from 'react'\n\nimport State from './state'\n\n\nconst states = {\n  search: new State(''),\n  sorting: new State(['name', true]),\n  filters: new State({name: true, phone_number: false, address: true}),\n  data: new State(null)\n}\n\n\nexport const useSharedState = function (name) {\n  if (!states[name]) throw new Error('Can`t find <'+name+'> shared state')\n  \n  const [ val, setter ] = useState(states[name].getValue())\n  useEffect(() => {\n    let unsub = states[name].subscribe(setter)\n    if (val !== states[name].getValue()) setter(states[name].getValue())\n    return unsub\n  }, [false])\n  \n  return val\n}\n\nexport const setSharedState = function (name, value) {\n  if (!states[name]) throw new Error('Can`t find <'+name+'> shared state')\n  \n  return states[name].setValue(value)\n}","import React from 'react'\nimport { Input } from './index-styled'\nimport { useSharedState, setSharedState } from '../shared-states'\n\nfunction setSearchValue(evt) {\n  setSharedState('search', evt.target.value)\n}\n\nexport default () => {\n  let search = useSharedState('search')\n  return (\n    <div>\n      <Input type='text' placeholder=\"Search\" value={search} onChange={setSearchValue} />\n    </div>\n  )\n}","import styled from '@emotion/styled'\n\nconst padding = 20\n\nexport const Table = styled.table`\n  text-align: left;\n  width: 100%;\n  border-spacing : 0;\n  border-collapse : collapse;\n  & td, & th {\n    vertical-align: top;\n    padding: ${padding}px 10px;\n    & p {\n      margin: 0;\n    }\n  }\n  & tr:hover>* {\n    background: #E3F2FD;\n  }\n`\nexport const TheadRow = styled.tr`\n  color: #5f6368;\n  font-weight: bold;\n  text-transform: capitalize;\n  &>th {\n    padding: ${padding}px 10px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    user-select: none;\n    cursor: pointer;\n  }\n`","import React from 'react'\nimport { useSharedState, setSharedState } from '../shared-states'\nimport Highlighter from \"react-highlight-words\"\n\nimport { Table, TheadRow } from './view-styled'\n\nconst Th = ({ field, sorting }) => {\n  return <th onClick={(e) => setSharedState('sorting', field===sorting[0] ? [field, !sorting[1]] : [field, true])}>\n    {field.replace('_', ' ')} {field!==sorting[0] ? '' : (sorting[1]?'↓':'↑')}\n  </th>\n}\n\nexport default ({ data }) => {\n  let sorting = useSharedState('sorting')\n  let search = useSharedState('search')\n  \n  return (\n    <Table>\n      <thead>\n        <TheadRow>\n          <Th field=\"name\" sorting={sorting} />\n          <Th field=\"phone_number\" sorting={sorting} />\n          <Th field=\"address\" sorting={sorting} />\n        </TheadRow>\n      </thead>\n      <tbody>\n        { data.map((d, i) => (\n          <tr key={d._index}>\n            <td>\n              <Highlighter\n                searchWords={[search]}\n                autoEscape={true}\n                textToHighlight={d.name}\n              />\n            </td>\n            <td>\n              <Highlighter\n                searchWords={[search]}\n                autoEscape={true}\n                textToHighlight={d.phone_number}\n              />\n            </td>\n            <td>\n              {d.address.split(',').map((s, i) => (\n                <p key={i}>\n                  <Highlighter\n                    searchWords={[search]}\n                    autoEscape={false}\n                    textToHighlight={s}\n                  />\n                </p>\n              ))}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}","import React from 'react'\nimport { useSharedState, setSharedState } from '../shared-states'\n\nimport View from './view'\n\nfunction initData(data) {\n\tif (!data.contacts) {\n\t\talert(`Error while trying to loda data`)\n\t\treturn\n\t}\n\tsetSharedState('data', data.contacts.map((e, i) => {\n\t  return Object.assign({\n\t    _index: i,\n\t    _search_name: e.name.toLowerCase(),\n\t    _search_address: e.address.toLowerCase(),\n\t  }, e)\n\t}))\n}\n\nconst dataSource = '//www.mocky.io/v2/581335f71000004204abaf83'\nif (window) {\n\tif (window.fetch) {\n\t\twindow.fetch(dataSource)\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(initData)\n\t\t\t.catch(e => {\n\t\t\t\talert(`Error while trying to fetch source\\n${dataSource}\\n\\n${e.message}`)\n\t\t\t})\n\t} else {\n\t\tconst req = new XMLHttpRequest();\n\t\n\t\treq.onreadystatechange = function(event) {\n\t\t    // XMLHttpRequest.DONE === 4\n\t\t    if (this.readyState === XMLHttpRequest.DONE) {\n\t\t        if (this.status === 200) {\n\t\t            initData(JSON.parse(this.responseText));\n\t\t        } else {\n\t\t\t\t\t\t\talert(`Error while trying to XMLHttpRequest source\\n${dataSource}`)\n\t\t        }\n\t\t    }\n\t\t};\n\t\t\n\t\treq.open('GET', dataSource, true);\n\t\treq.send(null);\n\t}\n}\n\nexport default () => {\n  let search = useSharedState('search').toLowerCase()\n  let sorting = useSharedState('sorting')\n  let filters = useSharedState('filters')\n  let data = useSharedState('data')\n  \n  if (!data) return 'Loading data'\n  \n  let processed\n  if (search) {\n    processed = data.filter(e => {\n      if (filters.name && e._search_name.indexOf(search) > -1) return true\n      if (filters.phone_number && e.phone_number.indexOf(search) > -1) return true\n      if (filters.address && e._search_address.indexOf(search) > -1) return true\n      \n      return false\n    })\n  } else {\n  \t processed = data.slice(0)\n  }\n  \n  processed = processed.sort((a, b) => {\n  \treturn sorting[1] ? a[sorting[0]].localeCompare(b[sorting[0]]) : b[sorting[0]].localeCompare(a[sorting[0]])\n  })\n  \n  return <div>\n  \t<View data={processed} />\n  </div>\n}","import DataProcess from './data-process'\n\nexport default DataProcess","import styled from '@emotion/styled'\n\nexport const Section = styled.div`\n  color: #aaa;\n  font-size: 0.8em;\n  text-transform: uppercase;\n  font-weight: bold;\n  margin: 20px 0;\n`\nexport const Filter = styled.span`\n  border: 1px solid #90CAF9;\n  border-radius: 20px;\n  line-height: 20px;\n  padding: 0 10px;\n  text-transform: capitalize;\n  display: inline-block;\n  cursor: pointer;\n  margin-left: 10px;\n  margin-bottom: 5px;\n  font-size: 0.8em;\n  \n  &:hover {\n    background: #E3F2FD;\n  }\n  \n  &.active {\n    background: #90CAF9;\n  }\n`\nexport const Infos = styled.div`\n  margin-left: 10px;\n  font-size: 0.8em;\n  max-width: 200px;\n`","import React from 'react'\nimport { useSharedState, setSharedState } from '../shared-states'\n\nimport { Section, Filter } from './styled'\n\nconst FilterC = ({ field, filters }) => (\n  <Filter \n    className={filters[field] ? 'active' : null}\n    onClick={() => setSharedState('filters', Object.assign({}, filters, {\n      [field] : !filters[field]\n    }))}\n    >\n    {field.replace('_', ' ')}\n  </Filter>\n)\n\nexport default () => {\n  let filters = useSharedState('filters')\n  \n  return <div>\n      <Section>Search Filter fields</Section>\n      <div><FilterC filters={filters} field=\"name\" /></div>\n      <div><FilterC filters={filters} field=\"phone_number\" /></div>\n      <div><FilterC filters={filters} field=\"address\" /></div>\n  </div>\n}","import React from 'react'\nimport { Section, Infos } from './styled'\n\nexport default () => (\n  <div>\n    <Section>Infos</Section>\n    <Infos>\n      <p><b>Filters</b><br />Use the search field and choose which fields you want to look at</p>\n      <p><b>Sorting</b><br />Click on columns head</p>\n      <p><b>Fetching data</b><br />This uses *fetch* with a *XMLHttpRequest* backup</p>\n      <p><b>Dependencies</b><br />Only React, Emotion for CSS and react-highlight-words</p>\n    </Infos>\n  </div>\n)","import React from 'react'\nimport Filters from './filters'\nimport Infos from './infos'\n\nexport default () => (\n  <div>\n    <Filters />\n    <Infos />\n  </div>\n)","import { keyframes } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport PARAMS from './theme-vars'\n\nconst _margin = Math.floor((PARAMS.headSize-PARAMS.contentSize)/2)\n\nexport const App = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\nexport const LeftCol = styled.div`\n  margin: 0 ${PARAMS.gutters}px;\n`\nexport const Content = styled.div`\n  flex-grow:1;\n  position: relative;\n  margin-right: ${PARAMS.gutters}px;\n`\n\nexport const Head = styled.div`\n  height: ${PARAMS.headSize}px;\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\nexport const Logo = styled.img`\n  animation: ${rotate} infinite 20s linear;\n  height: ${PARAMS.contentSize}px;\n  margin-top: ${_margin}px;\n  float: left;\n`\n\nexport const AppName = styled.h1`\n  display: inline-block;\n  font-size: ${PARAMS.appNameSize}px;\n  line-height: ${PARAMS.contentSize}px;\n  margin-top: ${_margin}px;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport logo from './logo.svg'\nimport Search from './search'\nimport Tab from './tab'\nimport LeftColContent from './left-col'\n\nimport { App, Head, Logo, AppName, LeftCol, Content } from './App-styled'\n\nexport default () => (\n  <App>\n    <LeftCol>\n      <Head>\n        <Logo src={logo} alt=\"logo\" />\n        <AppName>Phonebook demo</AppName>\n      </Head>\n      <LeftColContent />\n    </LeftCol>\n    <Content>\n      <Head>\n        <Search />\n      </Head>\n      <Tab />\n    </Content>\n  </App>\n);\n"],"sourceRoot":""}